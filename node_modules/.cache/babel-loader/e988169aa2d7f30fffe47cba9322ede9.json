{"ast":null,"code":"var _jsxFileName = \"/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/src/battle/ChoiceNickname.js\";\nimport React, { Fragment } from \"react\";\nimport { Col, Input } from \"reactstrap\";\nimport \"./ChoiceNickname.css\";\nimport BattleContext from \"../battle_context/BattleContext\";\n\nvar ChoiceNickname = function ChoiceNickname(_ref) {\n  var name = _ref.name,\n      title = _ref.title;\n  return React.createElement(Col, {\n    xs: {\n      size: 10\n    },\n    md: {\n      size: 3\n    },\n    className: \"my-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(BattleContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, function (context) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: context.state.battle[name].nicknameChecked ? \"nicknameChecked\" : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, title, \": \", context.state.battle[name].nickname), !context.state.battle[name].nicknameChecked && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: name,\n      placeholder: \"Enter Your Nickname\",\n      className: \"mr-2\",\n      onChange: function onChange(event) {\n        return context.handleChangeNickname(event, name);\n      },\n      onKeyPress: function onKeyPress(event) {\n        return context.onPressEnterNicknameChecked(event, name, context.state.battle[name].nickname.length);\n      },\n      value: context.state.battle[name].nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), context.state.battle[name].nickname.length > 2 && React.createElement(\"span\", {\n      onClick: function onClick() {\n        return context.submitCheck(name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-check-circle fa-2x btnNickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), 0 < context.state.battle[name].nickname.length ? context.state.battle[name].nickname.length < 3 ? React.createElement(\"div\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Your nickname must have at least 3 characters\") : React.createElement(\"div\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Your nickname is valid\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\xA0\")));\n  }));\n};\n\nexport default ChoiceNickname;","map":{"version":3,"sources":["/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/src/battle/ChoiceNickname.js"],"names":["React","Fragment","Col","Input","BattleContext","ChoiceNickname","name","title","size","context","state","battle","nicknameChecked","undefined","nickname","event","handleChangeNickname","onPressEnterNicknameChecked","length","submitCheck"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,YAA3B;AACA,OAAO,sBAAP;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,SACrB,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAuB,IAAA,EAAE,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAA3B;AAAwC,IAAA,SAAS,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,OAAO;AAAA,WACN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EACPA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BM,eAA3B,GACI,iBADJ,GAEIC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGN,KAPH,QAOYE,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BQ,QAPvC,CADF,EAUG,CAACL,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BM,eAA5B,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAEN,IAFR;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,QAAQ,EAAE,kBAAAS,KAAK;AAAA,eAAIN,OAAO,CAACO,oBAAR,CAA6BD,KAA7B,EAAoCT,IAApC,CAAJ;AAAA,OALjB;AAME,MAAA,UAAU,EAAE,oBAAAS,KAAK;AAAA,eACfN,OAAO,CAACQ,2BAAR,CACEF,KADF,EAEET,IAFF,EAGEG,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BQ,QAA3B,CAAoCI,MAHtC,CADe;AAAA,OANnB;AAaE,MAAA,KAAK,EAAET,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BQ,QAbpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAgBGL,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BQ,QAA3B,CAAoCI,MAApC,GAA6C,CAA7C,IACC;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMT,OAAO,CAACU,WAAR,CAAoBb,IAApB,CAAN;AAAA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,uCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBJ,CADF,EAuBG,IAAIG,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BQ,QAA3B,CAAoCI,MAAxC,GACCT,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBL,IAArB,EAA2BQ,QAA3B,CAAoCI,MAApC,GAA6C,CAA7C,GACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADF,GAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANH,GASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ,CAXJ,CADM;AAAA,GADV,CADF,CADqB;AAAA,CAAvB;;AAyDA,eAAeb,cAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Col, Input } from \"reactstrap\";\nimport \"./ChoiceNickname.css\";\nimport BattleContext from \"../battle_context/BattleContext\";\n\nconst ChoiceNickname = ({ name, title }) => (\n  <Col xs={{ size: 10 }} md={{ size: 3 }} className=\"my-auto\">\n    <BattleContext.Consumer>\n      {context => (\n        <Fragment>\n          <h3\n            className={\n              context.state.battle[name].nicknameChecked\n                ? \"nicknameChecked\"\n                : undefined\n            }\n          >\n            {title}: {context.state.battle[name].nickname}\n          </h3>\n          {!context.state.battle[name].nicknameChecked && (\n            <div>\n              <div className=\"d-flex\">\n                <Input\n                  type=\"text\"\n                  name={name}\n                  placeholder=\"Enter Your Nickname\"\n                  className=\"mr-2\"\n                  onChange={event => context.handleChangeNickname(event, name)}\n                  onKeyPress={event =>\n                    context.onPressEnterNicknameChecked(\n                      event,\n                      name,\n                      context.state.battle[name].nickname.length\n                    )\n                  }\n                  value={context.state.battle[name].nickname}\n                />\n                {context.state.battle[name].nickname.length > 2 && (\n                  <span onClick={() => context.submitCheck(name)}>\n                    <i className=\"far fa-check-circle fa-2x btnNickname\" />\n                  </span>\n                )}\n              </div>\n              {0 < context.state.battle[name].nickname.length ? (\n                context.state.battle[name].nickname.length < 3 ? (\n                  <div className=\"text-danger\">\n                    Your nickname must have at least 3 characters\n                  </div>\n                ) : (\n                  <div className=\"text-success\">Your nickname is valid</div>\n                )\n              ) : (\n                <div>&nbsp;</div>\n              )}\n            </div>\n          )}\n        </Fragment>\n      )}\n    </BattleContext.Consumer>\n  </Col>\n);\n\nexport default ChoiceNickname;\n"]},"metadata":{},"sourceType":"module"}