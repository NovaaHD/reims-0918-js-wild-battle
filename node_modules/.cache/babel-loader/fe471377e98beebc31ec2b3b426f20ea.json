{"ast":null,"code":"var _jsxFileName = \"/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/src/battle/CombatResult.js\";\nimport React, { Fragment } from \"react\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport { Col, Row, Button } from \"reactstrap\";\nimport HeroCard from \"../HeroCard\";\nimport WinOrLose from \"./WinOrLose\";\nimport { Transition, Spring } from \"react-spring\";\n\nvar CombatResult = function CombatResult() {\n  return React.createElement(BattleContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, function (battleContext) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      leave: {\n        opacity: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, function (styles) {\n      return React.createElement(\"h2\", {\n        className: \"text-center\",\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Fight on\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, battleContext.state.battle.round.randomStat === 0 ? React.createElement(\"i\", {\n        className: \"fas fa-dumbbell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }) : battleContext.state.battle.round.randomStat === 1 ? React.createElement(\"i\", {\n        className: \"fas fa-bolt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }) : battleContext.state.battle.round.randomStat === 2 ? React.createElement(\"i\", {\n        className: \"fas fa-book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"fas fa-shield-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), battleContext.state.battle.stats[battleContext.state.battle.round.randomStat], React.createElement(\"span\", {\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, battleContext.state.battle.round.randomStat === 0 ? React.createElement(\"i\", {\n        className: \"fas fa-dumbbell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }) : battleContext.state.battle.round.randomStat === 1 ? React.createElement(\"i\", {\n        className: \"fas fa-bolt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }) : battleContext.state.battle.round.randomStat === 2 ? React.createElement(\"i\", {\n        className: \"fas fa-book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"fas fa-shield-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })));\n    }))), React.createElement(Row, {\n      className: \"d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Transition, {\n      config: {\n        tension: 170,\n        friction: 6\n      },\n      from: {\n        opacity: 0,\n        transform: \"translate3d(-100px,0,0)\"\n      },\n      enter: {\n        opacity: 1,\n        transform: \"translate3d(0,0,0)\"\n      },\n      leave: {\n        opacity: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, function (styles) {\n      return React.createElement(Col, {\n        style: styles,\n        className: \"text-center px-5\",\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, battleContext.state.battle.player_1.nickname), React.createElement(HeroCard, {\n        className: \"position:relative\",\n        battle: \"true\",\n        selectedHeroOfList: battleContext.state.battle.player_1.selectedCard[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(WinOrLose, {\n        player1: 1,\n        player2: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }), React.createElement(Col, {\n      className: \"text-center\",\n      xs: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginTop: \"22%\"\n      },\n      className: \"d-flex justify-content-around align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, battleContext.state.battle.round.roundWinner !== 0 ? React.createElement(Col, {\n      xs: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Spring, {\n      config: {\n        tension: 170,\n        friction: 7\n      },\n      from: {\n        fontSize: \"0vw\"\n      },\n      to: {\n        fontSize: \"4vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, function (props) {\n      return React.createElement(\"h2\", {\n        style: props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, battleContext.state.battle.player_1.selectedCard[0].powerstats[battleContext.state.battle.stats[battleContext.state.battle.round.randomStat].toLowerCase()]);\n    })) : \"\", React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Transition, {\n      config: {\n        tension: 170,\n        friction: 7\n      },\n      from: {\n        fontSize: \"0vw\"\n      },\n      enter: {\n        fontSize: \"12vw\"\n      },\n      leave: {\n        opacity: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, function (styles) {\n      return React.createElement(\"h2\", {\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"VS\");\n    })), battleContext.state.battle.round.roundWinner !== 0 ? React.createElement(Col, {\n      xs: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Spring, {\n      config: {\n        tension: 170,\n        friction: 7\n      },\n      from: {\n        fontSize: \"0vw\"\n      },\n      to: {\n        fontSize: \"4vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, function (props) {\n      return React.createElement(\"h2\", {\n        style: props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, battleContext.state.battle.player_2.selectedCard[0].powerstats[battleContext.state.battle.stats[battleContext.state.battle.round.randomStat].toLowerCase()]);\n    })) : \"\"), React.createElement(Row, {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, battleContext.state.battle.round.roundWinner === 3 ? React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"135px\",\n        color: \"#cecece\",\n        textShadow: \"3px 3px #646464\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Draw\") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" \"))), React.createElement(Row, {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, battleContext.state.battle.round.roundWinner === 0 ? React.createElement(Button, {\n      className: \"button-style\",\n      onClick: function onClick() {\n        return battleContext.hasWonRound(battleContext.state.battle.player_1.selectedCard[0].powerstats[battleContext.state.battle.stats[battleContext.state.battle.round.randomStat].toLowerCase()], battleContext.state.battle.player_2.selectedCard[0].powerstats[battleContext.state.battle.stats[battleContext.state.battle.round.randomStat].toLowerCase()]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Result\") : battleContext.state.battle.round.roundWinner === 3 ? React.createElement(Button, {\n      className: \"button-style\",\n      onClick: function onClick() {\n        return battleContext.setNewFight();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Fight Again\") : battleContext.state.battle.round.roundNumber !== 5 ? React.createElement(Button, {\n      className: \"button-style\",\n      onClick: function onClick() {\n        return battleContext.getToNextRound();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Next round\") : React.createElement(Button, {\n      className: \"button-style\",\n      onClick: function onClick() {\n        battleContext.setStorage(battleContext.state.battle.player_1, battleContext.state.battle.player_2);\n        battleContext.getToFinalScore();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Final Score\")))), React.createElement(Transition, {\n      config: {\n        tension: 170,\n        friction: 6\n      },\n      from: {\n        opacity: 0,\n        transform: \"translate3d(100px,0,0)\"\n      },\n      enter: {\n        opacity: 1,\n        transform: \"translate3d(0,0,0)\"\n      },\n      leave: {\n        opacity: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, function (styles) {\n      return React.createElement(Col, {\n        style: styles,\n        className: \"text-center px-5\",\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, battleContext.state.battle.player_2.nickname), React.createElement(HeroCard, {\n        className: \"position:relative\",\n        battle: \"true\",\n        selectedHeroOfList: battleContext.state.battle.player_2.selectedCard[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(WinOrLose, {\n        player1: 2,\n        player2: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }));\n    })));\n  });\n};\n\nexport default CombatResult;","map":{"version":3,"sources":["/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/src/battle/CombatResult.js"],"names":["React","Fragment","BattleContext","Col","Row","Button","HeroCard","WinOrLose","Transition","Spring","CombatResult","battleContext","opacity","styles","state","battle","round","randomStat","stats","tension","friction","transform","player_1","nickname","selectedCard","marginTop","roundWinner","fontSize","props","powerstats","toLowerCase","player_2","textAlign","color","textShadow","hasWonRound","setNewFight","roundNumber","getToNextRound","setStorage","getToFinalScore"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport { Col, Row, Button } from \"reactstrap\";\nimport HeroCard from \"../HeroCard\";\nimport WinOrLose from \"./WinOrLose\";\nimport { Transition, Spring } from \"react-spring\";\n\nconst CombatResult = () => (\n  <BattleContext.Consumer>\n    {battleContext => (\n      <Fragment>\n        <Row>\n          <Col xs=\"12\">\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              leave={{ opacity: 0 }}\n            >\n              {styles => (\n                <h2 className=\"text-center\" style={styles}>\n                  Fight on\n                  <br />\n                  <span className=\"mr-3\">\n                    {battleContext.state.battle.round.randomStat === 0 ? (\n                      <i className=\"fas fa-dumbbell\" />\n                    ) : battleContext.state.battle.round.randomStat === 1 ? (\n                      <i className=\"fas fa-bolt\" />\n                    ) : battleContext.state.battle.round.randomStat === 2 ? (\n                      <i className=\"fas fa-book\" />\n                    ) : (\n                      <i className=\"fas fa-shield-alt\" />\n                    )}\n                  </span>\n                  {\n                    battleContext.state.battle.stats[\n                      battleContext.state.battle.round.randomStat\n                    ]\n                  }\n                  <span className=\"ml-3\">\n                    {battleContext.state.battle.round.randomStat === 0 ? (\n                      <i className=\"fas fa-dumbbell\" />\n                    ) : battleContext.state.battle.round.randomStat === 1 ? (\n                      <i className=\"fas fa-bolt\" />\n                    ) : battleContext.state.battle.round.randomStat === 2 ? (\n                      <i className=\"fas fa-book\" />\n                    ) : (\n                      <i className=\"fas fa-shield-alt\" />\n                    )}\n                  </span>\n                </h2>\n              )}\n            </Spring>\n          </Col>\n        </Row>\n        <Row className=\"d-flex justify-content-around\">\n          <Transition\n            config={{ tension: 170, friction: 6 }}\n            from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n            enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n            leave={{ opacity: 0 }}\n          >\n            {styles => (\n              <Col style={styles} className=\"text-center px-5\" xs=\"3\">\n                <h2>{battleContext.state.battle.player_1.nickname}</h2>\n                <HeroCard\n                  className=\"position:relative\"\n                  battle=\"true\"\n                  selectedHeroOfList={\n                    battleContext.state.battle.player_1.selectedCard[0]\n                  }\n                />\n                <WinOrLose player1={1} player2={2} />\n              </Col>\n            )}\n          </Transition>\n          <Col className=\"text-center\" xs=\"3\">\n            <Row\n              style={{ marginTop: \"22%\" }}\n              className=\"d-flex justify-content-around align-items-center\"\n            >\n              {battleContext.state.battle.round.roundWinner !== 0 ? (\n                <Col xs=\"3\">\n                  <Spring\n                    config={{ tension: 170, friction: 7 }}\n                    from={{ fontSize: \"0vw\" }}\n                    to={{ fontSize: \"4vw\" }}\n                  >\n                    {props => (\n                      <h2 style={props}>\n                        {\n                          battleContext.state.battle.player_1.selectedCard[0]\n                            .powerstats[\n                            battleContext.state.battle.stats[\n                              battleContext.state.battle.round.randomStat\n                            ].toLowerCase()\n                          ]\n                        }\n                      </h2>\n                    )}\n                  </Spring>\n                </Col>\n              ) : (\n                \"\"\n              )}\n              <Col xs=\"6\">\n                <Transition\n                  config={{ tension: 170, friction: 7 }}\n                  from={{ fontSize: \"0vw\" }}\n                  enter={{ fontSize: \"12vw\" }}\n                  leave={{ opacity: 0 }}\n                >\n                  {styles => <h2 style={styles}>VS</h2>}\n                </Transition>\n              </Col>\n              {battleContext.state.battle.round.roundWinner !== 0 ? (\n                <Col xs=\"3\">\n                  <Spring\n                    config={{ tension: 170, friction: 7 }}\n                    from={{ fontSize: \"0vw\" }}\n                    to={{ fontSize: \"4vw\" }}\n                  >\n                    {props => (\n                      <h2 style={props}>\n                        {\n                          battleContext.state.battle.player_2.selectedCard[0]\n                            .powerstats[\n                            battleContext.state.battle.stats[\n                              battleContext.state.battle.round.randomStat\n                            ].toLowerCase()\n                          ]\n                        }\n                      </h2>\n                    )}\n                  </Spring>\n                </Col>\n              ) : (\n                \"\"\n              )}\n            </Row>\n            <Row className=\"d-flex justify-content-center\">\n              <Col xs=\"12\">\n                {battleContext.state.battle.round.roundWinner === 3 ? (\n                  <h2\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: \"135px\",\n                      color: \"#cecece\",\n                      textShadow: \"3px 3px #646464\"\n                    }}\n                  >\n                    Draw\n                  </h2>\n                ) : (\n                  <h2> </h2>\n                )}\n              </Col>\n            </Row>\n            <Row className=\"d-flex justify-content-center\">\n              <Col xs=\"12\">\n                {battleContext.state.battle.round.roundWinner === 0 ? (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() =>\n                      battleContext.hasWonRound(\n                        battleContext.state.battle.player_1.selectedCard[0]\n                          .powerstats[\n                          battleContext.state.battle.stats[\n                            battleContext.state.battle.round.randomStat\n                          ].toLowerCase()\n                        ],\n                        battleContext.state.battle.player_2.selectedCard[0]\n                          .powerstats[\n                          battleContext.state.battle.stats[\n                            battleContext.state.battle.round.randomStat\n                          ].toLowerCase()\n                        ]\n                      )\n                    }\n                  >\n                    Result\n                  </Button>\n                ) : battleContext.state.battle.round.roundWinner === 3 ? (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() => battleContext.setNewFight()}\n                  >\n                    Fight Again\n                  </Button>\n                ) : battleContext.state.battle.round.roundNumber !== 5 ? (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() => battleContext.getToNextRound()}\n                  >\n                    Next round\n                  </Button>\n                ) : (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() => {\n                      battleContext.setStorage(\n                        battleContext.state.battle.player_1,\n                        battleContext.state.battle.player_2\n                      );\n                      battleContext.getToFinalScore();\n                    }}\n                  >\n                    Final Score\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Col>\n          <Transition\n            config={{ tension: 170, friction: 6 }}\n            from={{ opacity: 0, transform: \"translate3d(100px,0,0)\" }}\n            enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n            leave={{ opacity: 0 }}\n          >\n            {styles => (\n              <Col style={styles} className=\"text-center px-5\" xs=\"3\">\n                <h2>{battleContext.state.battle.player_2.nickname}</h2>\n                <HeroCard\n                  className=\"position:relative\"\n                  battle=\"true\"\n                  selectedHeroOfList={\n                    battleContext.state.battle.player_2.selectedCard[0]\n                  }\n                />\n                <WinOrLose player1={2} player2={1} />\n              </Col>\n            )}\n          </Transition>\n        </Row>\n      </Fragment>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default CombatResult;\n"]},"metadata":{},"sourceType":"module"}