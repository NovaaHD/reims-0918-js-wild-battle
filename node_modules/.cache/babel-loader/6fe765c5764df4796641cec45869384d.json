{"ast":null,"code":"import _defineProperty from \"/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar addSelectedHeroOnSelectedCard = function addSelectedHeroOnSelectedCard(prevState, idHeroSelected) {\n  var deck = prevState.battle[prevState.battle.round.currentPlayer].deck.map(function (hero) {\n    if (hero.id === idHeroSelected) {\n      hero.used = true;\n    }\n\n    return hero;\n  });\n  return {\n    battle: _objectSpread({}, prevState.battle, _defineProperty({}, prevState.battle.round.currentPlayer, _objectSpread({}, prevState.battle[prevState.battle.round.currentPlayer], {\n      deck: deck,\n      selectedCard: prevState.battle[prevState.battle.round.currentPlayer].deck.filter(function (hero) {\n        return hero.id === idHeroSelected;\n      })\n    })))\n  };\n};\n\nexport default addSelectedHeroOnSelectedCard;","map":{"version":3,"sources":["/home/bourmeau/workspace/wildbattle/reims-0918-js-wild-battle/src/battle_context/addSelectedHeroOnSelectedCard.js"],"names":["addSelectedHeroOnSelectedCard","prevState","idHeroSelected","deck","battle","round","currentPlayer","map","hero","id","used","selectedCard","filter"],"mappings":";;;AAAA,IAAMA,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,SAAD,EAAYC,cAAZ,EAA+B;AACnE,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiBH,SAAS,CAACG,MAAV,CAAiBC,KAAjB,CAAuBC,aAAxC,EAAuDH,IAAvD,CAA4DI,GAA5D,CACX,UAAAC,IAAI,EAAI;AACN,QAAIA,IAAI,CAACC,EAAL,KAAYP,cAAhB,EAAgC;AAC9BM,MAAAA,IAAI,CAACE,IAAL,GAAY,IAAZ;AACD;;AACD,WAAOF,IAAP;AACD,GANU,CAAb;AAQA,SAAO;AACLJ,IAAAA,MAAM,oBACDH,SAAS,CAACG,MADT,sBAEHH,SAAS,CAACG,MAAV,CAAiBC,KAAjB,CAAuBC,aAFpB,oBAGCL,SAAS,CAACG,MAAV,CAAiBH,SAAS,CAACG,MAAV,CAAiBC,KAAjB,CAAuBC,aAAxC,CAHD;AAIFH,MAAAA,IAAI,EAAJA,IAJE;AAMFQ,MAAAA,YAAY,EAAEV,SAAS,CAACG,MAAV,CACZH,SAAS,CAACG,MAAV,CAAiBC,KAAjB,CAAuBC,aADX,EAEZH,IAFY,CAEPS,MAFO,CAEA,UAAAJ,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,cAAhB;AAAA,OAFJ;AANZ;AADD,GAAP;AAaD,CAtBD;;AAuBA,eAAeF,6BAAf","sourcesContent":["const addSelectedHeroOnSelectedCard = (prevState, idHeroSelected) => {\n  const deck = prevState.battle[prevState.battle.round.currentPlayer].deck.map(\n    hero => {\n      if (hero.id === idHeroSelected) {\n        hero.used = true;\n      }\n      return hero;\n    }\n  );\n  return {\n    battle: {\n      ...prevState.battle,\n      [prevState.battle.round.currentPlayer]: {\n        ...prevState.battle[prevState.battle.round.currentPlayer],\n        deck,\n\n        selectedCard: prevState.battle[\n          prevState.battle.round.currentPlayer\n        ].deck.filter(hero => hero.id === idHeroSelected)\n      }\n    }\n  };\n};\nexport default addSelectedHeroOnSelectedCard;\n"]},"metadata":{},"sourceType":"module"}